name: Build and Upload Executables

on:
  release:
    types:
      - published  # parte solo quando viene pubblicata una release

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        shell: bash

      - name: Run build script on Linux/macOS
        if: runner.os != 'Windows'
        run: pyinstaller --noconfirm --onefile scripts/build.py
        shell: bash

      - name: Zip executables (Windows)
        if: runner.os == 'Windows'
        run: |
          New-Item -ItemType Directory -Force dist_zip
          Compress-Archive -Path dist\* -DestinationPath dist_zip\myapp-${{ matrix.os }}.zip
        shell: powershell

      - name: Zip executables (Linux/macOS)
        if: runner.os != 'Windows'
        run: |
          mkdir -p dist_zip
          zip -r dist_zip/myapp-${{ matrix.os }}.zip dist/*
        shell: bash

      - name: Check zip files
        run: ls -l dist_zip/   
        
      - name: Upload executables to release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: dist_zip/myapp-${{ matrix.os }}.zip
          asset_name: myapp-${{ matrix.os }}.zip
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}

